<?php

namespace App\Repository;

/**
 * Calendar
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Calendar extends \Doctrine\ORM\EntityRepository {

    public function getBasketsByQuote($quote) {
        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT p.id AS parent, qpa.children, c.id AS calendar_id FROM ClosasShopBundle:Calendar c'
                        . ' LEFT JOIN ClosasShopBundle:Map\QuoteProductAdditional qpa WITH qpa.quote = :quote'
                        . ' INNER JOIN ClosasShopBundle:Product p WITH p.id = c.product AND c.quote = :quote'
                )
                ->setParameter('quote', $quote);

        return $query->getResult();
    }

    public function getCountByBasket($quote) {

        return $this->createQueryBuilder('c')
                        ->where('c.quote = (:quote)')
                        ->addGroupBy('c.product')
                        ->setParameter('quote', $quote)
                        ->getQuery()
                        ->getResult();
    }

    /**
     *
     * @param type $month
     * @param type $year
     * @param type $product
     * @return type $sql
     */
    public function getReservedDates($product, $month, $year, $monthBefore, $yearBefore, $monthNext, $yearNext) {
        $datum = $year . '-' . $month . '-' . '%';
        $datumBefore = $yearBefore . '-' . $monthBefore . '-' . '%';
        $datumNext = $yearNext . '-' . $monthNext . '-' . '%';
        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT c.date_from AS date_from FROM ClosasShopBundle:Calendar c'
                        . ' INNER JOIN ClosasShopBundle:Order o WITH o.id = c.order AND c.date_from LIKE :datum OR c.date_from LIKE :datumBefore OR c.date_from LIKE :datumNext'
                        . ' INNER JOIN ClosasShopBundle:Order\Item oi WITH oi.calendar = c.id AND oi.sku = :sku'
                        . ' INNER JOIN ClosasShopBundle:Order\Status os WITH os.id = o.status AND os.id IN (:status)'
                )
                ->setParameter('datum', $datum)
                ->setParameter('datumBefore', $datumBefore)
                ->setParameter('datumNext', $datumNext)
                ->setParameter('sku', $product->getSku())
                ->setParameter('status', array(1, 2, 5, 6));
        return $query->getResult();
    }

}
