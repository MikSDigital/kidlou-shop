<?php

namespace App\Repository;

/**
 * Category
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Category extends \Doctrine\ORM\EntityRepository {

    protected $_category = null;

    /**
     *
     * @return collection
     */
    public function findAll() {
        return $this->findBy(array(), array('level' => 'ASC', 'order' => 'ASC'));
    }

    /**
     *
     * @param string $url_key
     * @param int $level
     * @return category
     */
    public function init($url_key, $level) {
        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT c FROM App\Entity\Category c '
                        . 'WHERE c.url_key = :url_key AND c.level = :level'
                )
                ->setParameter('url_key', $url_key)
                ->setParameter('level', $level);

        $this->_category = $query->getOneOrNullResult();
        return $this;
    }

    public function getCategory() {
        return $this->_category;
    }

    public function getId() {
        return $this->getCategory()->getId();
    }

    /**
     *
     * @param string $url_key
     * @param int $level
     * @return categories
     */
    public function getChildren() {

        $parent_id = $this->getCategory();
        $query = $this->getEntityManager()
                ->createQuery(
                        'SELECT c FROM ClosasShopBundle:Category c '
                        . 'WHERE c.parent_id = :parent_id '
                        . 'ORDER BY c.order ASC'
                )
                ->setParameter('parent_id', $this->getCategory()->getId());
        if (!$query->getResult()) {
            return false;
        }
        return $query->getResult();
    }

    public function getOrderContents($id) {
        return $this->createQueryBuilder('ca')
                        ->addSelect('co')
                        ->innerJoin('ca.contents', 'co')
                        ->where('ca.id = (:category) AND ca.status = 1')
                        ->setParameter('category', $id)
                        ->orderBy('co.created_at', 'DESC')
                        ->getQuery()
                        ->getOneOrNullResult();
    }

    public function getAdminOrderContents($id) {
        return $this->createQueryBuilder('ca')
                        ->addSelect('co')
                        ->innerJoin('ca.contents', 'co')
                        ->where('ca.id = (:category)')
                        ->setParameter('category', $id)
                        ->orderBy('co.created_at', 'DESC')
                        ->getQuery()
                        ->getOneOrNullResult();
    }

    public function getNavigation($short_name, $level) {
        return $this->createQueryBuilder('ca')
                        ->addSelect('ca')
                        ->innerJoin('ca.typ', 'typ')
                        ->where('typ.short_name = :short_name AND ca.status = 1 AND ca.level = :level')
                        ->setParameter('short_name', $short_name)
                        ->setParameter('level', $level)
                        ->addOrderBy('ca.parent_id', 'ASC')
                        ->addOrderBy('ca.order', 'ASC')
                        ->getQuery()
                        ->getResult();
    }

}
